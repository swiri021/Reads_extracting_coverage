from AMP_COV import COV_AMP
from sys import argv
import glob
from multiprocessing import Process, Queue
import multiprocessing as mp
import numpy


files = glob.glob(argv[1]+"edit/"+"*.bam")##input folder


queue_arr = [Queue()]*len(files)

def bed_pro(file_name):
	f = open(file_name,"r")
	result_arr = []
	for x in f.readlines():
		#if x.find("Pool#1-Amp#18")==-1 and x.find("Pool#2-Amp#1")==-1:
		temp = x.split("\t")
		if len(temp)<=4:
			result_arr.append([temp[0],temp[1],temp[2],temp[3].strip()])
		elif len(temp) == 5:
			result_arr.append([temp[0],temp[1],temp[2],temp[3].strip(),temp[4].strip()])
		elif len(temp) > 5:
			result_arr.append([temp[0],temp[1],temp[2],temp[3].strip(),temp[4],temp[5].strip()])
	f.close()

	return result_arr


def cov_run(file_name, bed_name, method, output):
	cov_c = COV_AMP(file_name,bed_name) ##input, BED, output
	dat_arr = cov_c.write_proc(method)##method
	output.put(dat_arr)

def barcode_sorting(arr):
	temp_res = []
	for x in range(len(arr)):
		for y in range(len(arr[x])):
			temp_res.append(int(arr[x][y][0]))

	return sorted(list(set(temp_res)))


def normalized_cov(arr):
	res = []
	arr_val = []
	for x in arr:
		val = int(x[4])
		arr_val.append(val)

	arr_min = min(arr_val)
	arr_max = max(arr_val)
	m_diff = arr_max - arr_min

	for x in arr:
		val = int(x[4])
		ch1 = float(val - arr_min)

		norm_v = float(ch1)/float(m_diff)
		res.append([x[0],x[1],x[2],x[3],norm_v])

	return res




def bet_samp_cal(arr):
	res = []
	for x in arr:
		avr = []
		for y in arr:
			temp_a = float(x[4])
			temp_b = float(y[4])

			if temp_a==0.0:
				temp_a = 1.0
			if temp_b==0.0:
				temp_b = 1.0

			af = temp_a/temp_b
			avr.append(af)

		avr_val = numpy.mean(avr)
		res.append([x[0],x[1],x[2],x[3],avr_val])
	return res


def bet_samp_cal_cov(arr):
	res = []
	t_cov = []
	for x in arr:
		t_cov.append(int(x[4]))

	t_cov = sum(t_cov)
	avr = []

	for x in arr:
		temp_a = float(x[4])

		if temp_a==0.0:
			temp_a = 1.0

		af = float(temp_a)/float(t_cov)

		res.append([x[0],x[1],x[2],x[3],af])

	return res



def external_cal(arr1,ref):

	res = []
	for x in arr1:
		for y in ref:
			if x[1]==y[1] and x[2]==y[2] and x[3]==y[3]:
				temp_a = float(x[4])
				temp_b = float(y[4])

				if temp_a==0.0:
					temp_a = 1.0
				if temp_b==0.0:
					temp_b = 1.0

				af = temp_a/temp_b
				res.append([x[0],x[1],x[2],x[3],af])
	return res

def multiple_ref(arr1,ref):

	res = []
	for x in arr1:
		for y in ref:
			if x[1]==y[0] and x[2]==y[1] and x[3]==y[2]:
				temp_a = float(x[4])
				ref_avg = float(y[4])

				ref_dat = y[3].split(":")
				ref_dat = ref_dat[:len(ref_dat)-1]

				min_temp = []
				for av in range(len(ref_dat)):
					min_temp.append(abs(float(ref_dat[av])-temp_a))

				min_index = min_temp.index(min(min_temp))
				min_value = ref_dat[min_index]


				#temp_b = float(min_value)#######method change
				temp_b = ref_avg

				af = temp_a/temp_b
				res.append([x[0],x[1],x[2],x[3],af])
	return res




def z_score_cal(arr1, tarr):
	res = []
	for x in arr1:
		t_arr = []
		for sa in tarr:
			for y in sa:
				if x[1]==y[1] and x[2]==y[2] and x[3]==y[3] and x[0]!=y[0]:

					t_arr.append(float(y[4]))

		v_mean = numpy.mean(t_arr)
		v_std = numpy.std(t_arr)

		vf = float(x[4])-v_mean
		z_score =  float(vf)/float(v_std)

		res.append([x[0],x[1],x[2],x[3],x[4],z_score])

	return res


processes = [mp.Process(target=cov_run, args=(files[n],argv[2],argv[3],queue_arr[n])) for n in range(len(files))] #####input, BED, output, method

for p in processes:
	p.start()

res_arr = [None]*len(files)

for a in range(len(files)):
	res_arr[a] = queue_arr[a].get()

for a in range(len(files)):
	queue_arr[a].close()

for p in processes:
	p.join()


#res_arr = [[[19, 'chr3', '52437232', '52437356', 4712, 0.99820978695438023], [19, 'chr3', '52441408', '52441532', 7489, 0.99901683759837079], [19, 'chr3', '52436189', '52436325', 3937, 0.995293519998802], [19, 'chr3', '52436401', '52436539', 5636, 0.99938927803663768], [19, 'chr3', '52441181', '52441319', 3826, 0.99861549883709544], [19, 'chr3', '52441979', '52442125', 6320, 0.99191629096585443], [19, 'chr3', '52442543', '52442689', 3629, 0.99435294828191612], [19, 'chr3', '52437486', '52437634', 3631, 0.99841083165236311], [19, 'chr3', '52439743', '52439894', 4836, 0.99781303578569058], [19, 'chr3', '52443570', '52443732', 1487, 0.99886672146255218], [19, 'chr3', '52436693', '52436863', 4901, 0.99886697792766987], [19, 'chr3', '52438358', '52438529', 5401, 0.99921392074892035], [19, 'chr3', '52437065', '52437237', 4788, 0.99913786403994409], [19, 'chr3', '52439081', '52439253', 2526, 0.98398515899758188], [19, 'chr3', '52440794', '52440966', 3248, 0.99815628938022649], [19, 'chr3', '52437650', '52437823', 5420, 0.96779962886336857], [19, 'chr3', '52440173', '52440346', 2545, 0.99885301566031137], [19, 'chr3', '52443728', '52443902', 248, 0.9959909158324064], [19, 'chr3', '52443876', '52444005', 0, 'NA'], [19, 'chr3', '52437407', '52437538', 4778, 0.99918040382286444], [19, 'chr3', '52439836', '52439970', 4028, 0.99904585809779389], [19, 'chr3', '52437563', '52437699', 11376, 0.9961515988251719], [19, 'chr3', '52439134', '52439270', 1341, 0.99911720840461438], [19, 'chr3', '52437149', '52437294', 9364, 0.99916554964722226], [19, 'chr3', '52436575', '52436724', 5853, 0.99217288902492151], [19, 'chr3', '52441868', '52442020', 2759, 0.99886734324030546], [19, 'chr3', '52442453', '52442605', 2719, 0.99894262596542982], [19, 'chr3', '52436807', '52436968', 8238, 0.99816032052644699], [19, 'chr3', '52438469', '52438630', 9018, 0.9970294056469462], [19, 'chr3', '52441098', '52441261', 4169, 0.9982959236079344], [19, 'chr3', '52443708', '52443873', 1249, 0.99502147172283317], [19, 'chr3', '52436286', '52436454', 2814, 0.99837123904288061], [19, 'chr3', '52441275', '52441446', 702, 0.99910864530747578], [19, 'chr3', '52443443', '52443615', 1067, 0.99721017414615964], [19, 'chr3', '52437771', '52437945', 5925, 0.99902808089625972], [19, 'chr3', '52440290', '52440464', 3919, 0.99575014738101808]], [[29, 'chr3', '52437232', '52437356', 4910, 0.99766769594639126], [29, 'chr3', '52441408', '52441532', 9139, 0.99905756612038266], [29, 'chr3', '52436189', '52436325', 5156, 0.99486463514808354], [29, 'chr3', '52436401', '52436539', 6581, 0.99942632391447483], [29, 'chr3', '52441181', '52441319', 4308, 0.99802188042469031], [29, 'chr3', '52441979', '52442125', 7087, 0.99229053389286637], [29, 'chr3', '52442543', '52442689', 3399, 0.9940937503778321], [29, 'chr3', '52437486', '52437634', 4065, 0.99855556663674772], [29, 'chr3', '52439743', '52439894', 6000, 0.99737417218542801], [29, 'chr3', '52443570', '52443732', 1039, 0.99875830273648714], [29, 'chr3', '52436693', '52436863', 5643, 0.99870219220063938], [29, 'chr3', '52438358', '52438529', 6403, 0.99920358969160228], [29, 'chr3', '52437065', '52437237', 6108, 0.99904243005741478], [29, 'chr3', '52439081', '52439253', 2967, 0.98055549023756972], [29, 'chr3', '52440794', '52440966', 3605, 0.99802277198980716], [29, 'chr3', '52437650', '52437823', 6840, 0.96400381976138771], [29, 'chr3', '52440173', '52440346', 3412, 0.99903604415561609], [29, 'chr3', '52443728', '52443902', 82, 0.99726661059714039], [29, 'chr3', '52443876', '52444005', 0, 'NA'], [29, 'chr3', '52437407', '52437538', 5459, 0.99921133110249971], [29, 'chr3', '52439836', '52439970', 5279, 0.9990019593263092], [29, 'chr3', '52437563', '52437699', 14639, 0.99567784282917482], [29, 'chr3', '52439134', '52439270', 1678, 0.99885192456005045], [29, 'chr3', '52437149', '52437294', 13612, 0.99906167985651806], [29, 'chr3', '52436575', '52436724', 7027, 0.99438407752262359], [29, 'chr3', '52441868', '52442020', 3034, 0.99871847135967884], [29, 'chr3', '52442453', '52442605', 1674, 0.99865198390240961], [29, 'chr3', '52436807', '52436968', 10768, 0.99706745544654951], [29, 'chr3', '52438469', '52438630', 11340, 0.99670161140139435], [29, 'chr3', '52441098', '52441261', 5254, 0.99826249821930568], [29, 'chr3', '52443708', '52443873', 999, 0.9949464616131285], [29, 'chr3', '52436286', '52436454', 2873, 0.99831559842872075], [29, 'chr3', '52441275', '52441446', 792, 0.99850847657865205], [29, 'chr3', '52443443', '52443615', 921, 0.99639547509027104], [29, 'chr3', '52437771', '52437945', 6933, 0.99879719018321389], [29, 'chr3', '52440290', '52440464', 4859, 0.99309848060122929]], [[30, 'chr3', '52437232', '52437356', 5540, 0.99724729241877563], [30, 'chr3', '52441408', '52441532', 10397, 0.99882099985417472], [30, 'chr3', '52436189', '52436325', 4640, 0.99448054006084918], [30, 'chr3', '52436401', '52436539', 6641, 0.99907797193106462], [30, 'chr3', '52441181', '52441319', 5354, 0.99799959937849569], [30, 'chr3', '52441979', '52442125', 9571, 0.99283509116438751], [30, 'chr3', '52442543', '52442689', 5616, 0.9941068571205558], [30, 'chr3', '52437486', '52437634', 4823, 0.9985864466996548], [30, 'chr3', '52439743', '52439894', 5840, 0.99730903565272411], [30, 'chr3', '52443570', '52443732', 2289, 0.99842780016072596], [30, 'chr3', '52436693', '52436863', 5541, 0.99863265284456548], [30, 'chr3', '52438358', '52438529', 6794, 0.9984454807905867], [30, 'chr3', '52437065', '52437237', 6841, 0.99882208163501074], [30, 'chr3', '52439081', '52439253', 3174, 0.98548709719962757], [30, 'chr3', '52440794', '52440966', 4471, 0.99817948224474851], [30, 'chr3', '52437650', '52437823', 6838, 0.96787587892890159], [30, 'chr3', '52440173', '52440346', 3583, 0.99875778201171672], [30, 'chr3', '52443728', '52443902', 344, 0.99420275327452545], [30, 'chr3', '52443876', '52444005', 0, 'NA'], [30, 'chr3', '52437407', '52437538', 6841, 0.99914859998817129], [30, 'chr3', '52439836', '52439970', 5761, 0.99898571713555251], [30, 'chr3', '52437563', '52437699', 11409, 0.99584886544677109], [30, 'chr3', '52439134', '52439270', 1927, 0.99843936017582957], [30, 'chr3', '52437149', '52437294', 8991, 0.99903581742662551], [30, 'chr3', '52436575', '52436724', 6494, 0.99426006039645554], [30, 'chr3', '52441868', '52442020', 4474, 0.99880596663765042], [30, 'chr3', '52442453', '52442605', 4722, 0.99601111259726871], [30, 'chr3', '52436807', '52436968', 8539, 0.99642487992615558], [30, 'chr3', '52438469', '52438630', 10867, 0.99667578691427361], [30, 'chr3', '52441098', '52441261', 5917, 0.99802897132211488], [30, 'chr3', '52443708', '52443873', 3081, 0.9944921463908819], [30, 'chr3', '52436286', '52436454', 3357, 0.9977623161269269], [30, 'chr3', '52441275', '52441446', 1102, 0.99854066503221206], [30, 'chr3', '52443443', '52443615', 2545, 0.99817014666240211], [30, 'chr3', '52437771', '52437945', 6589, 0.99885999480150511], [30, 'chr3', '52440290', '52440464', 5726, 0.99449074798960935]], [[21, 'chr3', '52437232', '52437356', 6584, 0.99771807509897059], [21, 'chr3', '52441408', '52441532', 16678, 0.99875101060311633], [21, 'chr3', '52436189', '52436325', 5544, 0.99390172735760729], [21, 'chr3', '52436401', '52436539', 7284, 0.99926780157422601], [21, 'chr3', '52441181', '52441319', 6567, 0.99857544198815829], [21, 'chr3', '52441979', '52442125', 11474, 0.99217587828110332], [21, 'chr3', '52442543', '52442689', 6529, 0.99527817933477114], [21, 'chr3', '52437486', '52437634', 4256, 0.99871564468604013], [21, 'chr3', '52439743', '52439894', 8384, 0.99756789975228455], [21, 'chr3', '52443570', '52443732', 2479, 0.99815985139368157], [21, 'chr3', '52436693', '52436863', 5650, 0.9988724622592362], [21, 'chr3', '52438358', '52438529', 8276, 0.99938453754815804], [21, 'chr3', '52437065', '52437237', 5469, 0.99889865499836206], [21, 'chr3', '52439081', '52439253', 3034, 0.9759795955910473], [21, 'chr3', '52440794', '52440966', 5215, 0.99857187451225082], [21, 'chr3', '52437650', '52437823', 8359, 0.95970215205379017], [21, 'chr3', '52440173', '52440346', 4559, 0.99889312507686701], [21, 'chr3', '52443728', '52443902', 214, 0.99648189923729735], [21, 'chr3', '52443876', '52444005', 0, 'NA'], [21, 'chr3', '52437407', '52437538', 5668, 0.99927677546908511], [21, 'chr3', '52439836', '52439970', 5487, 0.9990792347720131], [21, 'chr3', '52437563', '52437699', 19317, 0.99604356418765061], [21, 'chr3', '52439134', '52439270', 1838, 0.99904787812840057], [21, 'chr3', '52437149', '52437294', 19506, 0.99919671047282543], [21, 'chr3', '52436575', '52436724', 9071, 0.9927070485706122], [21, 'chr3', '52441868', '52442020', 3544, 0.99890660270880416], [21, 'chr3', '52442453', '52442605', 4185, 0.99787461485254814], [21, 'chr3', '52436807', '52436968', 16017, 0.99715597209021301], [21, 'chr3', '52438469', '52438630', 15460, 0.99787831550866157], [21, 'chr3', '52441098', '52441261', 6080, 0.99870136422344924], [21, 'chr3', '52443708', '52443873', 2546, 0.99431074293603872], [21, 'chr3', '52436286', '52436454', 3350, 0.9980206112295672], [21, 'chr3', '52441275', '52441446', 671, 0.99917204835237627], [21, 'chr3', '52443443', '52443615', 1643, 0.99786975045648185], [21, 'chr3', '52437771', '52437945', 9061, 0.99883357625899294], [21, 'chr3', '52440290', '52440464', 5805, 0.99424297325927757]], [[22, 'chr3', '52437232', '52437356', 7097, 0.99813301394955689], [22, 'chr3', '52441408', '52441532', 12784, 0.99890109612822253], [22, 'chr3', '52436189', '52436325', 6505, 0.99555771578423513], [22, 'chr3', '52436401', '52436539', 8163, 0.99921171351112326], [22, 'chr3', '52441181', '52441319', 6778, 0.99861551224977496], [22, 'chr3', '52441979', '52442125', 11776, 0.99384573685974609], [22, 'chr3', '52442543', '52442689', 6496, 0.99466057088872439], [22, 'chr3', '52437486', '52437634', 5492, 0.99835387098679218], [22, 'chr3', '52439743', '52439894', 7331, 0.99790872652737328], [22, 'chr3', '52443570', '52443732', 2696, 0.99841557680331117], [22, 'chr3', '52436693', '52436863', 7851, 0.99881993301714667], [22, 'chr3', '52438358', '52438529', 9049, 0.99910235307575079], [22, 'chr3', '52437065', '52437237', 8507, 0.99876025489268505], [22, 'chr3', '52439081', '52439253', 4091, 0.9861209802572819], [22, 'chr3', '52440794', '52440966', 5755, 0.99816741761461047], [22, 'chr3', '52437650', '52437823', 10056, 0.97105975324301819], [22, 'chr3', '52440173', '52440346', 4801, 0.99922703964612458], [22, 'chr3', '52443728', '52443902', 502, 0.99597014241883008], [22, 'chr3', '52443876', '52444005', 0, 'NA'], [22, 'chr3', '52437407', '52437538', 7394, 0.9993103547956147], [22, 'chr3', '52439836', '52439970', 7926, 0.99919497892822151], [22, 'chr3', '52437563', '52437699', 15779, 0.99697988391121783], [22, 'chr3', '52439134', '52439270', 2602, 0.99865488086087539], [22, 'chr3', '52437149', '52437294', 13416, 0.99918728024181369], [22, 'chr3', '52436575', '52436724', 9387, 0.99461843203119371], [22, 'chr3', '52441868', '52442020', 5239, 0.99859228860469629], [22, 'chr3', '52442453', '52442605', 5609, 0.99765297313528556], [22, 'chr3', '52436807', '52436968', 13099, 0.99833660433042293], [22, 'chr3', '52438469', '52438630', 15084, 0.99716659172402067], [22, 'chr3', '52441098', '52441261', 7644, 0.99810027833692272], [22, 'chr3', '52443708', '52443873', 3610, 0.99456727944262713], [22, 'chr3', '52436286', '52436454', 4278, 0.99797134842717061], [22, 'chr3', '52441275', '52441446', 1473, 0.99887646248456674], [22, 'chr3', '52443443', '52443615', 2910, 0.9981699033005671], [22, 'chr3', '52437771', '52437945', 10042, 0.99884050207518937], [22, 'chr3', '52440290', '52440464', 6613, 0.99513410541062297]], [[23, 'chr3', '52437232', '52437356', 8760, 0.99747017233760171], [23, 'chr3', '52441408', '52441532', 14293, 0.9989223238084034], [23, 'chr3', '52436189', '52436325', 6672, 0.9949679961912794], [23, 'chr3', '52436401', '52436539', 10051, 0.99935762394396999], [23, 'chr3', '52441181', '52441319', 8152, 0.99829951927863292], [23, 'chr3', '52441979', '52442125', 13054, 0.99228494493894881], [23, 'chr3', '52442543', '52442689', 7627, 0.99373261179192296], [23, 'chr3', '52437486', '52437634', 6920, 0.99855881893454213], [23, 'chr3', '52439743', '52439894', 9640, 0.99733656673353088], [23, 'chr3', '52443570', '52443732', 3661, 0.99810144297078562], [23, 'chr3', '52436693', '52436863', 9746, 0.99871500826884718], [23, 'chr3', '52438358', '52438529', 10383, 0.99924696971489191], [23, 'chr3', '52437065', '52437237', 9661, 0.99902930266258483], [23, 'chr3', '52439081', '52439253', 3693, 0.9809570589235419], [23, 'chr3', '52440794', '52440966', 6871, 0.99815960575793583], [23, 'chr3', '52437650', '52437823', 9890, 0.9635347200710227], [23, 'chr3', '52440173', '52440346', 5464, 0.99913887219763298], [23, 'chr3', '52443728', '52443902', 546, 0.99510546924340038], [23, 'chr3', '52443876', '52444005', 0, 'NA'], [23, 'chr3', '52437407', '52437538', 9058, 0.99935529977296422], [23, 'chr3', '52439836', '52439970', 8498, 0.99902610974311723], [23, 'chr3', '52437563', '52437699', 18782, 0.9964135718178847], [23, 'chr3', '52439134', '52439270', 3197, 0.99908691972253327], [23, 'chr3', '52437149', '52437294', 14382, 0.99916658274951131], [23, 'chr3', '52436575', '52436724', 10257, 0.9927834518643065], [23, 'chr3', '52441868', '52442020', 5734, 0.99856236116975527], [23, 'chr3', '52442453', '52442605', 3600, 0.99773209064327717], [23, 'chr3', '52436807', '52436968', 14493, 0.99601606772684781], [23, 'chr3', '52438469', '52438630', 16497, 0.99708586202572691], [23, 'chr3', '52441098', '52441261', 8755, 0.99811080784685446], [23, 'chr3', '52443708', '52443873', 4972, 0.99397961920086053], [23, 'chr3', '52436286', '52436454', 5231, 0.99804735505366571], [23, 'chr3', '52441275', '52441446', 1380, 0.99899991524705534], [23, 'chr3', '52443443', '52443615', 3698, 0.99751436980391628], [23, 'chr3', '52437771', '52437945', 10944, 0.99841985531356936], [23, 'chr3', '52440290', '52440464', 7677, 0.99149646877746256]], [[18, 'chr3', '52437232', '52437356', 7603, 0.99750522926009932], [18, 'chr3', '52441408', '52441532', 13192, 0.99903105987988594], [18, 'chr3', '52436189', '52436325', 7307, 0.99387573559599951], [18, 'chr3', '52436401', '52436539', 9811, 0.99939582751687883], [18, 'chr3', '52441181', '52441319', 6344, 0.99865558236014418], [18, 'chr3', '52441979', '52442125', 10355, 0.9920718599313515], [18, 'chr3', '52442543', '52442689', 4939, 0.99397304650988638], [18, 'chr3', '52437486', '52437634', 6069, 0.99871188539008671], [18, 'chr3', '52439743', '52439894', 9068, 0.99741394672189587], [18, 'chr3', '52443570', '52443732', 1518, 0.99800338326908433], [18, 'chr3', '52436693', '52436863', 8148, 0.99869545756446509], [18, 'chr3', '52438358', '52438529', 10022, 0.99929686852666921], [18, 'chr3', '52437065', '52437237', 8559, 0.99893488969858779], [18, 'chr3', '52439081', '52439253', 4491, 0.9837129038438609], [18, 'chr3', '52440794', '52440966', 5300, 0.9984170688898627], [18, 'chr3', '52437650', '52437823', 10668, 0.9547395809627014], [18, 'chr3', '52440173', '52440346', 4634, 0.99894596610626274], [18, 'chr3', '52443728', '52443902', 167, 0.99504439397067901], [18, 'chr3', '52443876', '52444005', 0, 'NA'], [18, 'chr3', '52437407', '52437538', 8589, 0.99926588153318774], [18, 'chr3', '52439836', '52439970', 7816, 0.99915596021937492], [18, 'chr3', '52437563', '52437699', 22086, 0.9964879934587848], [18, 'chr3', '52439134', '52439270', 2380, 0.99936047948591145], [18, 'chr3', '52437149', '52437294', 19380, 0.99924842532295033], [18, 'chr3', '52436575', '52436724', 11869, 0.99356962274407368], [18, 'chr3', '52441868', '52442020', 4595, 0.99849521791420948], [18, 'chr3', '52442453', '52442605', 2561, 0.9987694979346079], [18, 'chr3', '52436807', '52436968', 17393, 0.99794555745100788], [18, 'chr3', '52438469', '52438630', 19338, 0.99751559218838781], [18, 'chr3', '52441098', '52441261', 7239, 0.99825247869203038], [18, 'chr3', '52443708', '52443873', 2061, 0.99403349359681337], [18, 'chr3', '52436286', '52436454', 4719, 0.99841068022886414], [18, 'chr3', '52441275', '52441446', 971, 0.99861479995904645], [18, 'chr3', '52443443', '52443615', 1650, 0.99777660324171957], [18, 'chr3', '52437771', '52437945', 11373, 0.99885946853355767], [18, 'chr3', '52440290', '52440464', 7124, 0.99251437588336511]], [[17, 'chr3', '52437232', '52437356', 12107, 0.99811492684850245], [17, 'chr3', '52441408', '52441532', 15048, 0.99877917545574346], [17, 'chr3', '52436189', '52436325', 10554, 0.99488763669197544], [17, 'chr3', '52436401', '52436539', 14431, 0.99949434540577309], [17, 'chr3', '52441181', '52441319', 9181, 0.99770398538885219], [17, 'chr3', '52441979', '52442125', 12658, 0.99219184575460062], [17, 'chr3', '52442543', '52442689', 6356, 0.99459037733734468], [17, 'chr3', '52437486', '52437634', 10033, 0.99876960085771094], [17, 'chr3', '52439743', '52439894', 11791, 0.9978331211199909], [17, 'chr3', '52443570', '52443732', 1778, 0.99790998347428816], [17, 'chr3', '52436693', '52436863', 13150, 0.99891523149183037], [17, 'chr3', '52438358', '52438529', 15438, 0.99930527618870357], [17, 'chr3', '52437065', '52437237', 13945, 0.99888056901281319], [17, 'chr3', '52439081', '52439253', 6814, 0.98672619982115761], [17, 'chr3', '52440794', '52440966', 8052, 0.99797031504522771], [17, 'chr3', '52437650', '52437823', 14688, 0.96660362121714904], [17, 'chr3', '52440173', '52440346', 6586, 0.99902315122812779], [17, 'chr3', '52443728', '52443902', 219, 0.99448905684144229], [17, 'chr3', '52443876', '52444005', 0, 'NA'], [17, 'chr3', '52437407', '52437538', 12319, 0.9993543145975099], [17, 'chr3', '52439836', '52439970', 10692, 0.99899422639886704], [17, 'chr3', '52437563', '52437699', 24508, 0.99639913497639332], [17, 'chr3', '52439134', '52439270', 3838, 0.99910147748520906], [17, 'chr3', '52437149', '52437294', 22357, 0.99922788974525423], [17, 'chr3', '52436575', '52436724', 14754, 0.99450768896255426], [17, 'chr3', '52441868', '52442020', 6783, 0.99874589725086815], [17, 'chr3', '52442453', '52442605', 3940, 0.99821834090302131], [17, 'chr3', '52436807', '52436968', 20399, 0.99832685745465022], [17, 'chr3', '52438469', '52438630', 22396, 0.99701976506451873], [17, 'chr3', '52441098', '52441261', 10632, 0.9978707640321558], [17, 'chr3', '52443708', '52443873', 1943, 0.99599182769537986], [17, 'chr3', '52436286', '52436454', 7267, 0.99811361864134873], [17, 'chr3', '52441275', '52441446', 1922, 0.9990172274251361], [17, 'chr3', '52443443', '52443615', 2214, 0.99747904455788805], [17, 'chr3', '52437771', '52437945', 14424, 0.99880905706325729], [17, 'chr3', '52440290', '52440464', 8996, 0.995925392128302]], [[20, 'chr3', '52437232', '52437356', 6470, 0.99604252879294286], [20, 'chr3', '52441408', '52441532', 12730, 0.99894774852393109], [20, 'chr3', '52436189', '52436325', 6118, 0.99384170144029793], [20, 'chr3', '52436401', '52436539', 9446, 0.99940700304092944], [20, 'chr3', '52441181', '52441319', 7420, 0.99832220008594019], [20, 'chr3', '52441979', '52442125', 11697, 0.99015905026580342], [20, 'chr3', '52442543', '52442689', 6918, 0.99177745567449693], [20, 'chr3', '52437486', '52437634', 6515, 0.9984194478438535], [20, 'chr3', '52439743', '52439894', 8560, 0.99783375626663195], [20, 'chr3', '52443570', '52443732', 3801, 0.9985773724263588], [20, 'chr3', '52436693', '52436863', 8937, 0.99885341179103104], [20, 'chr3', '52438358', '52438529', 10105, 0.99929917156407588], [20, 'chr3', '52437065', '52437237', 9163, 0.99920813991558266], [20, 'chr3', '52439081', '52439253', 3489, 0.98354629500022939], [20, 'chr3', '52440794', '52440966', 6374, 0.99799421341058314], [20, 'chr3', '52437650', '52437823', 8934, 0.96094933817814621], [20, 'chr3', '52440173', '52440346', 4604, 0.9985247811654121], [20, 'chr3', '52443728', '52443902', 662, 0.99488662013404183], [20, 'chr3', '52443876', '52444005', 0, 'NA'], [20, 'chr3', '52437407', '52437538', 8210, 0.99908415542393814], [20, 'chr3', '52439836', '52439970', 7353, 0.99891200870393149], [20, 'chr3', '52437563', '52437699', 17552, 0.9962351366025366], [20, 'chr3', '52439134', '52439270', 3180, 0.99908666296707282], [20, 'chr3', '52437149', '52437294', 16074, 0.99831254585473361], [20, 'chr3', '52436575', '52436724', 9628, 0.99014340165572279], [20, 'chr3', '52441868', '52442020', 6165, 0.99870982200025793], [20, 'chr3', '52442453', '52442605', 3684, 0.99832133264758072], [20, 'chr3', '52436807', '52436968', 12951, 0.99470915457258535], [20, 'chr3', '52438469', '52438630', 15935, 0.9968236644598425], [20, 'chr3', '52441098', '52441261', 8519, 0.99760765722522571], [20, 'chr3', '52443708', '52443873', 3992, 0.99292524442825225], [20, 'chr3', '52436286', '52436454', 4822, 0.99803603523533246], [20, 'chr3', '52441275', '52441446', 1501, 0.99814158981731516], [20, 'chr3', '52443443', '52443615', 3552, 0.99570991776660356], [20, 'chr3', '52437771', '52437945', 10600, 0.99894111906310823], [20, 'chr3', '52440290', '52440464', 6874, 0.9913065724920469]], [[24, 'chr3', '52437232', '52437356', 8214, 0.99690928941147183], [24, 'chr3', '52441408', '52441532', 15078, 0.99891959659234075], [24, 'chr3', '52436189', '52436325', 7573, 0.99484138697073643], [24, 'chr3', '52436401', '52436539', 10497, 0.99921302566778702], [24, 'chr3', '52441181', '52441319', 8344, 0.99809548126224412], [24, 'chr3', '52441979', '52442125', 13970, 0.98981574999265798], [24, 'chr3', '52442543', '52442689', 7134, 0.99404933350231262], [24, 'chr3', '52437486', '52437634', 6719, 0.99870777906944097], [24, 'chr3', '52439743', '52439894', 9546, 0.99787227547892676], [24, 'chr3', '52443570', '52443732', 3139, 0.99848776247841642], [24, 'chr3', '52436693', '52436863', 9254, 0.99868927903990123], [24, 'chr3', '52438358', '52438529', 11729, 0.99920375298094222], [24, 'chr3', '52437065', '52437237', 10475, 0.99869956152522321], [24, 'chr3', '52439081', '52439253', 4351, 0.98136889140694583], [24, 'chr3', '52440794', '52440966', 6814, 0.9980955761394108], [24, 'chr3', '52437650', '52437823', 10283, 0.96330550619764377], [24, 'chr3', '52440173', '52440346', 5779, 0.99907278395866328], [24, 'chr3', '52443728', '52443902', 545, 0.99722661604977325], [24, 'chr3', '52443876', '52444005', 0, 'NA'], [24, 'chr3', '52437407', '52437538', 9808, 0.99933844314658227], [24, 'chr3', '52439836', '52439970', 9050, 0.99898243588686197], [24, 'chr3', '52437563', '52437699', 20655, 0.99592286442541444], [24, 'chr3', '52439134', '52439270', 3197, 0.99920651713922892], [24, 'chr3', '52437149', '52437294', 14902, 0.99908875920381224], [24, 'chr3', '52436575', '52436724', 12097, 0.99219341641645287], [24, 'chr3', '52441868', '52442020', 6170, 0.99845602661434907], [24, 'chr3', '52442453', '52442605', 3588, 0.99705707621897821], [24, 'chr3', '52436807', '52436968', 15529, 0.99722298772602802], [24, 'chr3', '52438469', '52438630', 20368, 0.99665563568232207], [24, 'chr3', '52441098', '52441261', 10044, 0.99775344313239955], [24, 'chr3', '52443708', '52443873', 3547, 0.99488769852457637], [24, 'chr3', '52436286', '52436454', 5137, 0.99786214855808264], [24, 'chr3', '52441275', '52441446', 1789, 0.99787525456084847], [24, 'chr3', '52443443', '52443615', 3116, 0.99768262829507093], [24, 'chr3', '52437771', '52437945', 12282, 0.9989120608235178], [24, 'chr3', '52440290', '52440464', 7731, 0.99255349042591401]]]


rw = open(argv[1]+"/edit/coverage/cnv_analysis.txt","w")#####output

barcode_temp = barcode_sorting(res_arr)

ref_dig = int(argv[4])
ref_arr_avr = []
res_arr_avr = []


"""
####normalization
norm_arr = []
for sr in res_arr:
	norm_arr.append(normalized_cov(sr))

####normalization
"""

"""
############1-ref
for sr in res_arr:
	if sr[0][0]!=ref_dig:
		#res_arr_avr.append(bet_samp_cal(sr))
		res_arr_avr.append(bet_samp_cal_cov(sr))
	else:
		#ref_arr_avr.append(bet_samp_cal(sr))
		ref_arr_avr.append(bet_samp_cal_cov(sr))

ref_arr_avr = ref_arr_avr[0]
fin_arr_avr = []

for sr in res_arr_avr:
	fin_arr_avr.append(external_cal(sr,ref_arr_avr))
############1-ref
"""


############multiple-ref
for sr in res_arr:
	res_arr_avr.append(bet_samp_cal_cov(sr))

fin_arr_avr = []
ref_dat = bed_pro("ctrl_data/ref_analysis.txt")

for sr in res_arr_avr:
	fin_arr_avr.append(multiple_ref(sr,ref_dat))
############multiple-ref


"""
#####p-value calculation
p_val_inc = []
for sr in fin_arr_avr:
	p_val_inc.append(z_score_cal(sr,fin_arr_avr))

fin_arr_avr = p_val_inc
#####p-value calculation
"""

########without p-value output
bar_str = "\t"*4
for b in barcode_temp:
	bar_str = bar_str+"Barcode"+str(b)+"\t"

bar_str = bar_str[:len(bar_str)-1]+"\n"
rw.write(bar_str)


for loc in bed_pro(argv[2]):
	d_str = str(loc[0])+"\t"+str(loc[1])+"\t"+str(loc[2])+"\t"+str(loc[3])+"\t"
	for b in barcode_temp:
		for sr in range(len(fin_arr_avr)):
			for dat in fin_arr_avr[sr]:
				if loc[0]==dat[1] and loc[1]==dat[2] and loc[2]==dat[3] and b==dat[0]:
					d_str = d_str+str(dat[4])+"\t"

	d_str = d_str.strip()+"\n"
	rw.write(d_str)
########without p-value output

"""
########p-value output
bar_str = "\t"*4
for b in barcode_temp:
	bar_str = bar_str+"Barcode"+str(b)+"\t"+""+"\t"

bar_str = bar_str[:len(bar_str)-1]+"\n"
rw.write(bar_str)


for loc in bed_pro(argv[2]):
	d_str = str(loc[0])+"\t"+str(loc[1])+"\t"+str(loc[2])+"\t"+str(loc[3])+"\t"
	for b in barcode_temp:
		for sr in range(len(fin_arr_avr)):
			for dat in fin_arr_avr[sr]:
				if loc[0]==dat[1] and loc[1]==dat[2] and loc[2]==dat[3] and b==dat[0]:
					d_str = d_str+str(dat[4])+"\t"+str(dat[5])+"\t"

	d_str = d_str.strip()+"\n"
	rw.write(d_str)
########p-value output
"""